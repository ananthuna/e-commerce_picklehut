{"ast":null,"code":"import _slicedToArray from \"/home/ananthu/Desktop/e-commerce-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ananthu/Desktop/e-commerce-api/client/src/components/Cart/Address/ChangeAddress/ChangeAddressbtn.js\";\n// import * as React from 'react';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n// import axios from 'axios';\n// import { baseUrl } from '../../../../url'\nimport { Box } from '@mui/system';\nimport AddButton from '../../../Profile/Address/AddButton/Addaddress';\n// import { UserContext } from '../../../../Context/Context';\n\n// export default function BasicPopover() {\n//     // const [open, setopen] = React.useState(false)\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n//     const [addresss, setAddresss] = React.useState([])\n//     const [name, setName] = React.useState('')\n//     const [number, setNumber] = React.useState('')\n//     const { setAddress } = React.useContext(UserContext)\n\n//     React.useEffect(() => {\n//         let user = localStorage.getItem(\"user\")\n//         user = JSON.parse(user)\n//         const customConfig = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${user.token}`\n//             }\n//         }\n//         axios.get(`${baseUrl}/api/user/address`, customConfig)\n//             .then((res) => {\n//                 setAddresss(res.data.address)\n//                 setName(res.data.firstName)\n//                 setNumber(res.data.number)\n//                 // console.log(res.data)\n//             })\n//     }, [])\n\n//     const handleClick = (e) => {\n//         setAnchorEl(e.currentTarget);\n//         // setopen(true)\n//     }\n\n//     const handleClose = () => {\n//         // setopen(false)\n//         setAnchorEl(null);\n//     };\n\n//     const handleaddress = (address) => () => {\n//         setAddress(address)\n//         setAnchorEl(null);\n//         // setopen(false)\n//     }\n\n//     const id = open ? 'simple-popover' : undefined;\n\n//     return (\n// <div>\n//     <Box >\n//         {/* aria-describedby={id}  */}\n//         <Button variant=\"outlined\" onClick={(e) => handleClick}\n//             sx={{\n//                 width: '5.5rem',\n//                 height: '2rem',\n//                 m: '2rem',\n//             }}>\n//             change\n//         </Button>\n//     </Box>\n//     <Popover\n//         id={id}\n//         open={open}\n//         anchorEl={anchorEl}\n//         onClose={handleClose}\n//         anchorOrigin={{\n//             vertical: 'top',\n//             horizontal: 'center',\n//         }}\n//         transformOrigin={{\n//             vertical: 'top',\n//             horizontal: 'center',\n//         }}\n//     >\n//         <Box sx={{\n//             mt: '1.5rem',\n//             mb: '2rem',\n//             ml: '1rem',\n//             width: '20rem',\n//             height: '2rem',\n\n//         }}>\n//             <AddButton />\n//         </Box>\n//         <Box sx={{\n//             height: 300,\n//             overflow: \"hidden\",\n//             overflowY: \"scroll\",\n//         }}>\n//             {addresss && addresss.map((address) =>\n//                 <Box sx={{\n//                     border: 1,\n//                     borderColor: 'lightgrey',\n//                     width: '60rem',\n//                     height: '5rem',\n//                     pl: '2rem',\n//                     pr: '2rem',\n//                     '&:hover': {\n//                         background: \"lightgrey\",\n//                     }\n//                 }}\n//                     key={address._id}\n//                     onClick={handleaddress(address)}>\n//                     <Box>\n//                         <Box sx={{\n//                             display: 'flex',\n//                             gap: 3\n//                         }}>\n//                             <Typography>{name}</Typography>\n//                             <Typography>{number}</Typography>\n//                         </Box>\n//                         <Box>\n//                             <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n//                         </Box>\n//                     </Box>\n\n//                 </Box>\n//             )}\n//         </Box>\n//     </Popover>\n// </div>\n//     );\n// }\n\n////test popover\n\nimport React from \"react\";\n// import Button from \"@material-ui/core/Button\";\n// import Popover from \"@material-ui/core/Popover\";\n\nexport default function App() {\n  var _this = this;\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    anchorEl = _React$useState2[0],\n    setAnchorEl = _React$useState2[1];\n  var open = Boolean(anchorEl);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: function onClick(event) {\n      setAnchorEl(event.currentTarget);\n    },\n    sx: {\n      width: '5.5rem',\n      height: '2rem',\n      m: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"change address\")), /*#__PURE__*/React.createElement(Popover, {\n    anchorEl: anchorEl,\n    open: open,\n    id: open ? \"simple-popover\" : undefined,\n    onClose: function onClose() {\n      setAnchorEl(null);\n    },\n    transformOrigin: {\n      horizontal: \"center\",\n      vertical: \"top\"\n    },\n    anchorOrigin: {\n      horizontal: \"center\",\n      vertical: \"bottom\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: '1.5rem',\n      mb: '2rem',\n      ml: '1rem',\n      width: '20rem',\n      height: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 300,\n      overflow: \"hidden\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, addresss && addresss.map(function (address) {\n    return /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        border: 1,\n        borderColor: 'lightgrey',\n        width: '60rem',\n        height: '5rem',\n        pl: '2rem',\n        pr: '2rem',\n        '&:hover': {\n          background: \"lightgrey\"\n        }\n      },\n      key: address._id,\n      onClick: handleaddress(address),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        display: 'flex',\n        gap: 3\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, name), /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, number)), /*#__PURE__*/React.createElement(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, address.address + ',' + address.city + ' ', /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 93\n      }\n    }, 'pin:' + address.pin)))));\n  }))));\n}","map":{"version":3,"names":["Popover","Typography","Button","Box","AddButton","React","App","useState","anchorEl","setAnchorEl","open","Boolean","event","currentTarget","width","height","m","undefined","horizontal","vertical","mt","mb","ml","overflow","overflowY","addresss","map","address","border","borderColor","pl","pr","background","_id","handleaddress","display","gap","name","number","city","pin"],"sources":["/home/ananthu/Desktop/e-commerce-api/client/src/components/Cart/Address/ChangeAddress/ChangeAddressbtn.js"],"sourcesContent":["// import * as React from 'react';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n// import axios from 'axios';\n// import { baseUrl } from '../../../../url'\nimport { Box } from '@mui/system';\nimport AddButton from '../../../Profile/Address/AddButton/Addaddress'\n// import { UserContext } from '../../../../Context/Context';\n\n// export default function BasicPopover() {\n//     // const [open, setopen] = React.useState(false)\n//     const [anchorEl, setAnchorEl] = React.useState(null);\n//     const open = Boolean(anchorEl);\n//     const [addresss, setAddresss] = React.useState([])\n//     const [name, setName] = React.useState('')\n//     const [number, setNumber] = React.useState('')\n//     const { setAddress } = React.useContext(UserContext)\n\n\n//     React.useEffect(() => {\n//         let user = localStorage.getItem(\"user\")\n//         user = JSON.parse(user)\n//         const customConfig = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${user.token}`\n//             }\n//         }\n//         axios.get(`${baseUrl}/api/user/address`, customConfig)\n//             .then((res) => {\n//                 setAddresss(res.data.address)\n//                 setName(res.data.firstName)\n//                 setNumber(res.data.number)\n//                 // console.log(res.data)\n//             })\n//     }, [])\n\n//     const handleClick = (e) => {\n//         setAnchorEl(e.currentTarget);\n//         // setopen(true)\n//     }\n\n//     const handleClose = () => {\n//         // setopen(false)\n//         setAnchorEl(null);\n//     };\n\n//     const handleaddress = (address) => () => {\n//         setAddress(address)\n//         setAnchorEl(null);\n//         // setopen(false)\n//     }\n\n\n//     const id = open ? 'simple-popover' : undefined;\n\n//     return (\n// <div>\n//     <Box >\n//         {/* aria-describedby={id}  */}\n//         <Button variant=\"outlined\" onClick={(e) => handleClick}\n//             sx={{\n//                 width: '5.5rem',\n//                 height: '2rem',\n//                 m: '2rem',\n//             }}>\n//             change\n//         </Button>\n//     </Box>\n//     <Popover\n//         id={id}\n//         open={open}\n//         anchorEl={anchorEl}\n//         onClose={handleClose}\n//         anchorOrigin={{\n//             vertical: 'top',\n//             horizontal: 'center',\n//         }}\n//         transformOrigin={{\n//             vertical: 'top',\n//             horizontal: 'center',\n//         }}\n//     >\n//         <Box sx={{\n//             mt: '1.5rem',\n//             mb: '2rem',\n//             ml: '1rem',\n//             width: '20rem',\n//             height: '2rem',\n\n\n//         }}>\n//             <AddButton />\n//         </Box>\n//         <Box sx={{\n//             height: 300,\n//             overflow: \"hidden\",\n//             overflowY: \"scroll\",\n//         }}>\n//             {addresss && addresss.map((address) =>\n//                 <Box sx={{\n//                     border: 1,\n//                     borderColor: 'lightgrey',\n//                     width: '60rem',\n//                     height: '5rem',\n//                     pl: '2rem',\n//                     pr: '2rem',\n//                     '&:hover': {\n//                         background: \"lightgrey\",\n//                     }\n//                 }}\n//                     key={address._id}\n//                     onClick={handleaddress(address)}>\n//                     <Box>\n//                         <Box sx={{\n//                             display: 'flex',\n//                             gap: 3\n//                         }}>\n//                             <Typography>{name}</Typography>\n//                             <Typography>{number}</Typography>\n//                         </Box>\n//                         <Box>\n//                             <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n//                         </Box>\n//                     </Box>\n\n//                 </Box>\n//             )}\n//         </Box>\n//     </Popover>\n// </div>\n//     );\n// }\n\n\n\n////test popover\n\nimport React from \"react\";\n// import Button from \"@material-ui/core/Button\";\n// import Popover from \"@material-ui/core/Popover\";\n\nexport default function App() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <Box >\n                <Button\n                    variant=\"outlined\"\n                    onClick={(event) => {\n                        setAnchorEl(event.currentTarget);\n                    }}\n                    sx={{\n                        width: '5.5rem',\n                        height: '2rem',\n                        m: '2rem',\n                    }}>\n                    change address\n                </Button>\n            </Box>\n            <Popover\n                anchorEl={anchorEl}\n                open={open}\n                id={open ? \"simple-popover\" : undefined}\n                onClose={() => {\n                    setAnchorEl(null);\n                }}\n                transformOrigin={{\n                    horizontal: \"center\",\n                    vertical: \"top\",\n                }}\n                anchorOrigin={{\n                    horizontal: \"center\",\n                    vertical: \"bottom\",\n                }}\n            >\n                <Box sx={{\n                    mt: '1.5rem',\n                    mb: '2rem',\n                    ml: '1rem',\n                    width: '20rem',\n                    height: '2rem',\n\n\n                }}>\n                    <AddButton />\n                </Box>\n                <Box sx={{\n                    height: 300,\n                    overflow: \"hidden\",\n                    overflowY: \"scroll\",\n                }}>\n                    {addresss && addresss.map((address) =>\n                        <Box sx={{\n                            border: 1,\n                            borderColor: 'lightgrey',\n                            width: '60rem',\n                            height: '5rem',\n                            pl: '2rem',\n                            pr: '2rem',\n                            '&:hover': {\n                                background: \"lightgrey\",\n                            }\n                        }}\n                            key={address._id}\n                            onClick={handleaddress(address)}>\n                            <Box>\n                                <Box sx={{\n                                    display: 'flex',\n                                    gap: 3\n                                }}>\n                                    <Typography>{name}</Typography>\n                                    <Typography>{number}</Typography>\n                                </Box>\n                                <Box>\n                                    <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n                                </Box>\n                            </Box>\n\n                        </Box>\n                    )}\n                </Box>\n            </Popover>\n        </div>\n\n\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}