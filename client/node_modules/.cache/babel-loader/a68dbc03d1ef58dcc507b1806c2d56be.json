{"ast":null,"code":"var _jsxFileName = \"/home/ananthu/Desktop/e-commerce-api/client/src/components/Cart/Address/ChangeAddress/ChangeAddressbtn.js\";\n// import * as React from 'react';\n// import Popover from '@mui/material/Popover';\n// import Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import { baseUrl } from '../../../../url'\n// import { Box } from '@mui/system';\n// import AddButton from '../../../Profile/Address/AddButton/Addaddress'\n// import { UserContext } from '../../../../Context/Context';\n\n// export default function BasicPopover() {\n//     const [open, setopen] = React.useState(false)\n//     const [addresss, setAddresss] = React.useState([])\n//     const [name, setName] = React.useState('')\n//     const [number, setNumber] = React.useState('')\n//     const { setAddress } = React.useContext(UserContext)\n\n//     React.useEffect(() => {\n//         let user = localStorage.getItem(\"user\")\n//         user = JSON.parse(user)\n//         const customConfig = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${user.token}`\n//             }\n//         }\n//         axios.get(`${baseUrl}/api/user/address`, customConfig)\n//             .then((res) => {\n//                 setAddresss(res.data.address[0])\n//                 setName(res.data.firstName)\n//                 setNumber(res.data.number)\n//                 // console.log(res.data)\n//             })\n//     }, [])\n\n//     const handleClick = () => {\n//         setopen(true)\n//     }\n\n//     const handleClose = () => {\n//         setopen(false)\n//     };\n\n//     const handleaddress = (address) => () => {\n//         setAddress(address)\n//         setopen(false)\n//     }\n\n//     const id = open ? 'simple-popover' : undefined;\n\n//     return (\n//         <div>\n//             <Box >\n//             {/* aria-describedby={id}  */}\n//                 <Button variant=\"outlined\" onClick={handleClick}\n//                     sx={{\n//                         width: '5.5rem',\n//                         height: '2rem',\n//                         m: '2rem',\n//                     }}>\n//                     change\n//                 </Button>\n//             </Box>\n//             <Popover\n//                 id={id}\n//                 open={open}\n//                 onClose={handleClose}\n//                 anchorOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//                 transformOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//             >\n//                 <Box sx={{\n//                     mt: '1.5rem',\n//                     mb: '2rem',\n//                     ml: '1rem',\n//                     width: '20rem',\n//                     height: '2rem',\n\n//                 }}>\n//                     <AddButton />\n//                 </Box>\n//                 <Box sx={{\n//                     height: 300,\n//                     overflow: \"hidden\",\n//                     overflowY: \"scroll\",\n//                 }}>\n//                     {addresss && addresss.map((address) =>\n//                         <Box sx={{\n//                             border: 1,\n//                             borderColor: 'lightgrey',\n//                             width: '60rem',\n//                             height: '5rem',\n//                             pl: '2rem',\n//                             pr: '2rem',\n//                             '&:hover': {\n//                                 background: \"lightgrey\",\n//                             }\n//                         }}\n//                             key={address._id}\n//                             onClick={handleaddress(address)}>\n//                             <Box>\n//                                 <Box sx={{\n//                                     display: 'flex',\n//                                     gap: 3\n//                                 }}>\n//                                     <Typography>{name}</Typography>\n//                                     <Typography>{number}</Typography>\n//                                 </Box>\n//                                 <Box>\n//                                     <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n//                                 </Box>\n//                             </Box>\n\n//                         </Box>\n//                     )}\n//                 </Box>\n//             </Popover>\n//         </div>\n//     );\n// }\n\n////test popover\n\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\nexport default function PopoverPopupState() {\n  var _this = this;\n  return /*#__PURE__*/React.createElement(PopupState, {\n    variant: \"popover\",\n    popupId: \"demo-popup-popover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, function (popupState) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, Object.assign({\n      variant: \"contained\"\n    }, bindTrigger(popupState), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), \"Open Popover\"), /*#__PURE__*/React.createElement(Popover, Object.assign({}, bindPopover(popupState), {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      sx: {\n        p: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"The content of the Popover.\")));\n  });\n}","map":{"version":3,"names":["React","Typography","Button","Popover","PopupState","bindTrigger","bindPopover","PopoverPopupState","popupState","vertical","horizontal","p"],"sources":["/home/ananthu/Desktop/e-commerce-api/client/src/components/Cart/Address/ChangeAddress/ChangeAddressbtn.js"],"sourcesContent":["// import * as React from 'react';\n// import Popover from '@mui/material/Popover';\n// import Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import { baseUrl } from '../../../../url'\n// import { Box } from '@mui/system';\n// import AddButton from '../../../Profile/Address/AddButton/Addaddress'\n// import { UserContext } from '../../../../Context/Context';\n\n// export default function BasicPopover() {\n//     const [open, setopen] = React.useState(false)\n//     const [addresss, setAddresss] = React.useState([])\n//     const [name, setName] = React.useState('')\n//     const [number, setNumber] = React.useState('')\n//     const { setAddress } = React.useContext(UserContext)\n\n\n//     React.useEffect(() => {\n//         let user = localStorage.getItem(\"user\")\n//         user = JSON.parse(user)\n//         const customConfig = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${user.token}`\n//             }\n//         }\n//         axios.get(`${baseUrl}/api/user/address`, customConfig)\n//             .then((res) => {\n//                 setAddresss(res.data.address[0])\n//                 setName(res.data.firstName)\n//                 setNumber(res.data.number)\n//                 // console.log(res.data)\n//             })\n//     }, [])\n\n//     const handleClick = () => {\n//         setopen(true)\n//     }\n\n//     const handleClose = () => {\n//         setopen(false)\n//     };\n\n//     const handleaddress = (address) => () => {\n//         setAddress(address)\n//         setopen(false)\n//     }\n\n\n//     const id = open ? 'simple-popover' : undefined;\n\n//     return (\n//         <div>\n//             <Box >\n//             {/* aria-describedby={id}  */}\n//                 <Button variant=\"outlined\" onClick={handleClick}\n//                     sx={{\n//                         width: '5.5rem',\n//                         height: '2rem',\n//                         m: '2rem',\n//                     }}>\n//                     change\n//                 </Button>\n//             </Box>\n//             <Popover\n//                 id={id}\n//                 open={open}\n//                 onClose={handleClose}\n//                 anchorOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//                 transformOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//             >\n//                 <Box sx={{\n//                     mt: '1.5rem',\n//                     mb: '2rem',\n//                     ml: '1rem',\n//                     width: '20rem',\n//                     height: '2rem',\n\n\n//                 }}>\n//                     <AddButton />\n//                 </Box>\n//                 <Box sx={{\n//                     height: 300,\n//                     overflow: \"hidden\",\n//                     overflowY: \"scroll\",\n//                 }}>\n//                     {addresss && addresss.map((address) =>\n//                         <Box sx={{\n//                             border: 1,\n//                             borderColor: 'lightgrey',\n//                             width: '60rem',\n//                             height: '5rem',\n//                             pl: '2rem',\n//                             pr: '2rem',\n//                             '&:hover': {\n//                                 background: \"lightgrey\",\n//                             }\n//                         }}\n//                             key={address._id}\n//                             onClick={handleaddress(address)}>\n//                             <Box>\n//                                 <Box sx={{\n//                                     display: 'flex',\n//                                     gap: 3\n//                                 }}>\n//                                     <Typography>{name}</Typography>\n//                                     <Typography>{number}</Typography>\n//                                 </Box>\n//                                 <Box>\n//                                     <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n//                                 </Box>\n//                             </Box>\n\n//                         </Box>\n//                     )}\n//                 </Box>\n//             </Popover>\n//         </div>\n//     );\n// }\n\n\n\n////test popover\n\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Popover from '@mui/material/Popover';\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\n\nexport default function PopoverPopupState() {\n  return (\n    <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\n      {(popupState) => (\n        <div>\n          <Button variant=\"contained\" {...bindTrigger(popupState)}>\n            Open Popover\n          </Button>\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n          >\n            <Typography sx={{ p: 2 }}>The content of the Popover.</Typography>\n          </Popover>\n        </div>\n      )}\n    </PopupState>\n  );\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,IAAIC,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAE9E,eAAe,SAASC,iBAAiB,GAAG;EAAA;EAC1C,oBACE,oBAAC,UAAU;IAAC,OAAO,EAAC,SAAS;IAAC,OAAO,EAAC,oBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvD,UAACC,UAAU;IAAA,oBACV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,MAAM;MAAC,OAAO,EAAC;IAAW,GAAKH,WAAW,CAACG,UAAU,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,mBAE9C,eACT,oBAAC,OAAO,oBACFF,WAAW,CAACE,UAAU,CAAC;MAC3B,YAAY,EAAE;QACZC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MACd,CAAE;MACF,eAAe,EAAE;QACfD,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MACd,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBAEF,oBAAC,UAAU;MAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iCAAyC,CAC1D,CACN;EAAA,CACP,CACU;AAEjB"},"metadata":{},"sourceType":"module"}