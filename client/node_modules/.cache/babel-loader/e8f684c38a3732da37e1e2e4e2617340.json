{"ast":null,"code":"// import * as React from 'react';\n// import Popover from '@mui/material/Popover';\n// import Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import { baseUrl } from '../../../../url'\n// import { Box } from '@mui/system';\n// import AddButton from '../../../Profile/Address/AddButton/Addaddress'\n// import { UserContext } from '../../../../Context/Context';\n\n// export default function BasicPopover() {\n//     const [open, setopen] = React.useState(false)\n//     const [addresss, setAddresss] = React.useState([])\n//     const [name, setName] = React.useState('')\n//     const [number, setNumber] = React.useState('')\n//     const { setAddress } = React.useContext(UserContext)\n\n//     React.useEffect(() => {\n//         let user = localStorage.getItem(\"user\")\n//         user = JSON.parse(user)\n//         const customConfig = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${user.token}`\n//             }\n//         }\n//         axios.get(`${baseUrl}/api/user/address`, customConfig)\n//             .then((res) => {\n//                 setAddresss(res.data.address[0])\n//                 setName(res.data.firstName)\n//                 setNumber(res.data.number)\n//                 // console.log(res.data)\n//             })\n//     }, [])\n\n//     const handleClick = () => {\n//         setopen(true)\n//     }\n\n//     const handleClose = () => {\n//         setopen(false)\n//     };\n\n//     const handleaddress = (address) => () => {\n//         setAddress(address)\n//         setopen(false)\n//     }\n\n//     const id = open ? 'simple-popover' : undefined;\n\n//     return (\n//         <div>\n//             <Box >\n//             {/* aria-describedby={id}  */}\n//                 <Button variant=\"outlined\" onClick={handleClick}\n//                     sx={{\n//                         width: '5.5rem',\n//                         height: '2rem',\n//                         m: '2rem',\n//                     }}>\n//                     change\n//                 </Button>\n//             </Box>\n//             <Popover\n//                 id={id}\n//                 open={open}\n//                 onClose={handleClose}\n//                 anchorOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//                 transformOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//             >\n//                 <Box sx={{\n//                     mt: '1.5rem',\n//                     mb: '2rem',\n//                     ml: '1rem',\n//                     width: '20rem',\n//                     height: '2rem',\n\n//                 }}>\n//                     <AddButton />\n//                 </Box>\n//                 <Box sx={{\n//                     height: 300,\n//                     overflow: \"hidden\",\n//                     overflowY: \"scroll\",\n//                 }}>\n//                     {addresss && addresss.map((address) =>\n//                         <Box sx={{\n//                             border: 1,\n//                             borderColor: 'lightgrey',\n//                             width: '60rem',\n//                             height: '5rem',\n//                             pl: '2rem',\n//                             pr: '2rem',\n//                             '&:hover': {\n//                                 background: \"lightgrey\",\n//                             }\n//                         }}\n//                             key={address._id}\n//                             onClick={handleaddress(address)}>\n//                             <Box>\n//                                 <Box sx={{\n//                                     display: 'flex',\n//                                     gap: 3\n//                                 }}>\n//                                     <Typography>{name}</Typography>\n//                                     <Typography>{number}</Typography>\n//                                 </Box>\n//                                 <Box>\n//                                     <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n//                                 </Box>\n//                             </Box>\n\n//                         </Box>\n//                     )}\n//                 </Box>\n//             </Popover>\n//         </div>\n//     );\n// }\n\n////test popover","map":{"version":3,"names":[],"sources":["/home/ananthu/Desktop/e-commerce-api/client/src/components/Cart/Address/ChangeAddress/ChangeAddressbtn.js"],"sourcesContent":["// import * as React from 'react';\n// import Popover from '@mui/material/Popover';\n// import Typography from '@mui/material/Typography';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import { baseUrl } from '../../../../url'\n// import { Box } from '@mui/system';\n// import AddButton from '../../../Profile/Address/AddButton/Addaddress'\n// import { UserContext } from '../../../../Context/Context';\n\n// export default function BasicPopover() {\n//     const [open, setopen] = React.useState(false)\n//     const [addresss, setAddresss] = React.useState([])\n//     const [name, setName] = React.useState('')\n//     const [number, setNumber] = React.useState('')\n//     const { setAddress } = React.useContext(UserContext)\n\n\n//     React.useEffect(() => {\n//         let user = localStorage.getItem(\"user\")\n//         user = JSON.parse(user)\n//         const customConfig = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `Bearer ${user.token}`\n//             }\n//         }\n//         axios.get(`${baseUrl}/api/user/address`, customConfig)\n//             .then((res) => {\n//                 setAddresss(res.data.address[0])\n//                 setName(res.data.firstName)\n//                 setNumber(res.data.number)\n//                 // console.log(res.data)\n//             })\n//     }, [])\n\n//     const handleClick = () => {\n//         setopen(true)\n//     }\n\n//     const handleClose = () => {\n//         setopen(false)\n//     };\n\n//     const handleaddress = (address) => () => {\n//         setAddress(address)\n//         setopen(false)\n//     }\n\n\n//     const id = open ? 'simple-popover' : undefined;\n\n//     return (\n//         <div>\n//             <Box >\n//             {/* aria-describedby={id}  */}\n//                 <Button variant=\"outlined\" onClick={handleClick}\n//                     sx={{\n//                         width: '5.5rem',\n//                         height: '2rem',\n//                         m: '2rem',\n//                     }}>\n//                     change\n//                 </Button>\n//             </Box>\n//             <Popover\n//                 id={id}\n//                 open={open}\n//                 onClose={handleClose}\n//                 anchorOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//                 transformOrigin={{\n//                     vertical: 'top',\n//                     horizontal: 'center',\n//                 }}\n//             >\n//                 <Box sx={{\n//                     mt: '1.5rem',\n//                     mb: '2rem',\n//                     ml: '1rem',\n//                     width: '20rem',\n//                     height: '2rem',\n\n\n//                 }}>\n//                     <AddButton />\n//                 </Box>\n//                 <Box sx={{\n//                     height: 300,\n//                     overflow: \"hidden\",\n//                     overflowY: \"scroll\",\n//                 }}>\n//                     {addresss && addresss.map((address) =>\n//                         <Box sx={{\n//                             border: 1,\n//                             borderColor: 'lightgrey',\n//                             width: '60rem',\n//                             height: '5rem',\n//                             pl: '2rem',\n//                             pr: '2rem',\n//                             '&:hover': {\n//                                 background: \"lightgrey\",\n//                             }\n//                         }}\n//                             key={address._id}\n//                             onClick={handleaddress(address)}>\n//                             <Box>\n//                                 <Box sx={{\n//                                     display: 'flex',\n//                                     gap: 3\n//                                 }}>\n//                                     <Typography>{name}</Typography>\n//                                     <Typography>{number}</Typography>\n//                                 </Box>\n//                                 <Box>\n//                                     <Typography>{address.address + ',' + address.city + ' '}<b>{'pin:' + address.pin}</b></Typography>\n//                                 </Box>\n//                             </Box>\n\n//                         </Box>\n//                     )}\n//                 </Box>\n//             </Popover>\n//         </div>\n//     );\n// }\n\n\n\n////test popover\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA"},"metadata":{},"sourceType":"module"}